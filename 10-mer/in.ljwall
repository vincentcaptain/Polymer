# Sample LAMMPS script for modulating the probability that a hexamer passes 
# a pore with pulling force on a LJ wall, under Langevin dynamics

# settings
# a 3D 60 box
variable      x equal 60
variable      y equal 30
variable      z equal 30
# temperature t = 1
variable      t equal 1
#variable      rho equal 0.7
neigh_modify  delay 0 check yes one 200000 page 2000000


# System setup

units         lj
dimension     3
atom_style    bond
bond_style    harmonic
pair_style    lj/cut 3
#processors    1 2 3
read_data     data.polymer

# LJ pairs

# lattice       fcc ${rho}
# region        simbox block 0 $x 0 $y 0 $z
#create_box    1 simbox
region        void cylinder x 15 15 2 29 31
#region        wall block 29 31 0 30 0 30



#create_atoms  3 region wall
#delete_atoms  region void
pair_coeff    1 2 2.5 1
pair_coeff    1 3 2.5 1 1.12
pair_coeff    2 3 2.5 1 1.12

velocity      all create $t 97287


# Read bond/position info
group         polymer type 1 2
group         first type 1
region        box block 0 $x 0 $y 0 $z
region        spherein sphere 29 15 15 2
region        boxin block 27 29 13 17 13 17
region        hemiin intersect 2 boxin spherein
region        print block 29 31 12 18 12 18
group         print region print
#region        sphereout sphere 31 15 15 2
#region        boxout block 31 33 13 17 13 17
#region        hemiout intersect 2 boxout sphereout


# Create forces
#variable      ftotal equal fcm(polymer,x)
fix           1 polymer nve
fix           2 polymer langevin $t $t 1 1209
timestep      0.01
# equilibration run
thermo        1000
#run           10000

#fix 3 polymer spring tether 5 32 NULL NULL 0
reset_timestep 0
compute       com polymer com
compute       g polymer gyration      
thermo_style custom c_g c_com[1] c_com[2] c_com[3]
variable      c equal c_com[1]
group         p union print polymer
#run 10000
thermo        10

